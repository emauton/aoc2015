'''Advent of Code 2015 day 3: Perfectly Spherical Houses in a Vacuum
   https://adventofcode.com/2015/day/3'''


import itertools


def delivery_locations(instructions):
    '''Generate a sequence of delivery locations (x, y) from instructions'''
    x, y = 0, 0
    yield x, y  # start with the origin
    for i in instructions:
        if i == '^':
            y += 1
        elif i == 'v':
            y -= 1
        elif i == '<':
            x -= 1
        else:
            x += 1
        yield x, y


def unique_locations(instructions):
    '''Return a set of unique locations generated by instructions'''
    return set(delivery_locations(instructions))


def partition(instructions):
    '''Partition a sequence of instructions into two: even and odd indices'''
    even = itertools.islice(instructions, 0, None, 2)
    odd = itertools.islice(instructions, 1, None, 2)
    return even, odd


def run(args):  # pragma: no cover
    filename = args[0]
    with open(filename) as f:
        instructions = f.read()

    houses = unique_locations(instructions)
    print(f'Year 1: Santa delivers to {len(houses)} houses')

    santa, robo = partition(instructions)
    santa_houses = unique_locations(santa)
    robo_houses = unique_locations(robo)
    all_houses = santa_houses.union(robo_houses)
    print(f'Year 2: Santa and Robo-Santa deliver to {len(all_houses)} houses')
